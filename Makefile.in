prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
bindir = @bindir@
datadir = @datadir@
mandir = @mandir@

_ver0   = $(shell git rev-parse --verify --short HEAD 2>/dev/null)-git
_ver1   = @PACKAGE_VERSION@
VERSION = $(or $(_ver0),$(_ver1))

LIBS = @NCURSES_LIBS@

features-@CONFIG_WIDE_CHAR@ += -feature wide-char

types-cflags-$(typed) = -types all.types
types-prereq-$(typed) = all.types

CSC      = csc
TFLAGS   = -uses base -prologue prologue.scm $(features-y) 
CSCFLAGS = -scrutinize -C -Wno-int-to-pointer-cast -C -Wno-cpp $(TFLAGS) \
           -C '-DSCMUS_DIR=\"$(datadir)/scmus\"' \
           -C '-DVERSION=\"$(VERSION)\"' \
           $(types-cflags-y)
LD       = csc
LDFLAGS  =
INSTALL  = @scripts/install

objfiles = $(foreach f,$(1),$(addsuffix .@OBJEXT@,$(f)))

eggs = coops sandbox unix-sockets utf8

units   = bindings-view browser-view library-view options \
	  options-view queue-view search-view client ui-curses ui-lib \
	  user-api view
modules = base command-line config editable eval event format getopt input \
	  iter keys mpd-client ncurses option error status track window
types   = $(foreach unit,$(units) $(modules),$(addsuffix .types,$(unit)))
target  = scmus@EXEEXT@

test-units = test/iter

clean = $(call objfiles,$(units) $(modules) $(test-units) main check) \
	$(foreach mod,$(modules),$(addsuffix .import.scm,$(mod))) \
        $(types) $(target) all.types

all: $(target)

main_deps          = base config eval getopt
bindings-view_deps = base editable event input keys ncurses error window
browser-view_deps  = base ncurses track window
command-line_deps  = base editable event input iter ncurses
editable_deps      = base ncurses
eval_deps          = base command-line event option error
event_deps         = base
format_deps        = base eval error status track
input_deps         = base editable ncurses
keys_deps          = base eval event ncurses
library-view_deps  = base ncurses track window
option_deps        = base event
options_deps       = base event format option
options-view_deps  = base editable event input ncurses option error window
queue-view_deps    = base event status track window
base_deps          = config ncurses
client_deps        = base event mpd-client option error status track
error_deps         = base command-line event
search-view_deps   = base editable input format ncurses track window
status_deps        = base mpd-client track
track_deps         = base
ui-curses_deps     = base command-line editable event format input keys \
                     ncurses option error status window
ui-lib_deps        = base format ncurses option window
user-api_deps      = base command-line config eval event format keys ncurses \
                     option status track window
view_deps          = base
window_deps        = base format

$(foreach f,$(units) $(modules) main,$(eval $(f).@OBJEXT@: $(call objfiles,$($(f)_deps))))

include rules.mk

$(call objfiles,$(units) $(modules)): prologue.scm $(types-prereq-y)

$(target): $(call objfiles,$(units) $(modules)) main.@OBJEXT@
	$(call cmd,ld,$(LIBS))

$(call objfiles,$(test-units)): prologue.scm test/test.scm

check: $(call objfiles,$(units) $(modules) $(test-units)) check.@OBJEXT@
	$(call cmd,ld,$(LIBS))

all.types: $(types)
	$(call cmd,cat)

eggs:
	chicken-install $(eggs)

install: all
	$(INSTALL) -m755 $(bindir) scmus
	$(INSTALL) -m644 $(datadir)/scmus data/scmusrc.scm
	$(INSTALL) -m644 $(datadir)/scmus/colors $(wildcard data/colors/*)
	$(INSTALL) -m644 $(mandir)/man1 $(wildcard doc/*.1)
