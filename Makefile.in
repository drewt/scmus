prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
bindir = @bindir@
datadir = @datadir@
mandir = @mandir@

_ver0   = $(shell git rev-parse --verify --short HEAD 2>/dev/null)-git
_ver1   = @PACKAGE_VERSION@
VERSION = $(or $(_ver0),$(_ver1))

LIBS = @NCURSES_LIBS@

features-@CONFIG_WIDE_CHAR@ += -feature wide-char

types-cflags-$(typed) = -types all.types
types-prereq-$(typed) = all.types

prelude = '"(define *scmus-dir* \"$(datadir)/scmus\")\
	    (define *version*   \"$(VERSION)\")"'

CSC      = csc
TFLAGS   = -uses scmus-base -prologue prologue.scm $(features-y) 
CSCFLAGS = -scrutinize -C -Wno-int-to-pointer-cast -C -Wno-cpp $(TFLAGS) \
	   -C '-DSCMUS_DIR=\"$(datadir)/scmus\"' \
	   -C '-DVERSION=\"$(VERSION)\"' \
	   $(types-cflags-y)
LD       = csc
LDFLAGS  =
INSTALL  = @scripts/install

eggs = coops sandbox unix-sockets utf8

units = bindings-view browser-view eval-mode \
	format key-table keys library-view \
	mpd-client ncurses option options-view queue-view search-view \
	scmus-client ui-curses ui-lib view window
modules = command-line config editable event getopt input iter ncurses \
	  scmus-base scmus-error
objects = $(foreach unit,$(units) $(modules),$(addsuffix .@OBJEXT@,$(unit)))
imports = $(foreach mod,$(modules),$(addsuffix .import.scm,$(mod)))
types   = $(foreach unit,$(units) $(modules),$(addsuffix .types,$(unit)))
target = scmus@EXEEXT@

test-units = test/iter
test-objects = $(foreach unit,$(test-units),$(addsuffix .@OBJEXT@,$(unit)))

clean = $(objects) main.@OBJEXT@ $(test-objects) check.@OBJEXT@ $(types) \
	$(imports) $(target) all.types

all: $(target)

main.o: scmus-base.o config.o getopt.o
bindings-view.o: scmus-base.o editable.o event.o input.o ncurses.o scmus-error.o
browser-view.o: scmus-base.o ncurses.o
command-line.o: scmus-base.o editable.o event.o input.o iter.o ncurses.o
editable.o: scmus-base.o ncurses.o
eval-mode.o: scmus-base.o command-line.o config.o event.o ncurses.o scmus-error.o
event.o: scmus-base.o
format.o: scmus-base.o scmus-error.o
input.o: scmus-base.o editable.o ncurses.o
keys.o: scmus-base.o event.o ncurses.o
key-table.o: scmus-base.o ncurses.o
library-view.o: scmus-base.o ncurses.o
option.o: scmus-base.o event.o ncurses.o
options-view.o: scmus-base.o editable.o event.o input.o ncurses.o scmus-error.o
queue-view.o: scmus-base.o event.o
scmus-base.o: config.o ncurses.o
scmus-client.o: scmus-base.o event.o scmus-error.o
scmus-error.o: scmus-base.o command-line.o event.o
search-view.o: scmus-base.o editable.o input.o ncurses.o
ui-curses.o: scmus-base.o command-line.o editable.o event.o input.o ncurses.o \
	     scmus-error.o
ui-lib.o: scmus-base.o ncurses.o
view.o: scmus-base.o
window.o: scmus-base.o

include rules.mk

config.o: CSCFLAGS += -prelude $(prelude)

$(objects): prologue.scm $(types-prereq-y)

$(target): $(objects) main.@OBJEXT@
	$(call cmd,ld,$(LIBS))

$(test-objects): prologue.scm test/test.scm

check: $(objects) $(test-objects) check.@OBJEXT@
	$(call cmd,ld,$(LIBS))

all.types: $(types)
	$(call cmd,cat)

eggs:
	chicken-install $(eggs)

install: all
	$(INSTALL) -m755 $(bindir) scmus
	$(INSTALL) -m644 $(datadir)/scmus data/scmusrc.scm
	$(INSTALL) -m644 $(datadir)/scmus/colors $(wildcard data/colors/*)
	$(INSTALL) -m644 $(mandir)/man1 $(wildcard doc/*.1)
