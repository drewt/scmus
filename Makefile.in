prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
bindir = @bindir@
datadir = @datadir@
mandir = @mandir@

_ver0   = $(shell git rev-parse --verify --short HEAD 2>/dev/null)-git
_ver1   = @PACKAGE_VERSION@
VERSION = $(or $(_ver0),$(_ver1))

LIBS = @NCURSES_LIBS@

features-@CONFIG_WIDE_CHAR@ += -feature wide-char

types-cflags-$(typed) = -types all.types
types-prereq-$(typed) = all.types

prelude = '"(define *scmus-dir* \"$(datadir)/scmus\")\
	    (define *version*   \"$(VERSION)\")"'

CSC      = csc
TFLAGS   = -uses scmus-base -prologue prologue.scm $(features-y) 
CSCFLAGS = -scrutinize -C -Wno-int-to-pointer-cast -C -Wno-cpp $(TFLAGS) \
           -C '-DSCMUS_DIR=\"$(datadir)/scmus\"' \
           -C '-DVERSION=\"$(VERSION)\"' \
           $(types-cflags-y)
LD       = csc
LDFLAGS  =
INSTALL  = @scripts/install

objfiles = $(foreach f,$(1),$(addsuffix .@OBJEXT@,$(f)))

eggs = coops sandbox unix-sockets utf8

units   = bindings-view browser-view eval-mode \
          format key-table keys library-view \
          option options-view queue-view search-view \
          scmus-client ui-curses ui-lib view window
modules = command-line config editable event getopt input iter mpd-client \
	  ncurses scmus-base scmus-error status track
types   = $(foreach unit,$(units) $(modules),$(addsuffix .types,$(unit)))
target  = scmus@EXEEXT@

test-units = test/iter

clean = $(call objfiles,$(units) $(modules) $(test-units) main check) \
	$(foreach mod,$(modules),$(addsuffix .import.scm,$(mod))) \
        $(types) $(target) all.types

all: $(target)

main_deps          = scmus-base config getopt
bindings-view_deps = scmus-base editable event input ncurses scmus-error
browser-view_deps  = scmus-base ncurses track
command-line_deps  = scmus-base editable event input iter ncurses
editable_deps      = scmus-base ncurses
eval-mode_deps     = scmus-base command-line config event ncurses scmus-error track
event_deps         = scmus-base
format_deps        = scmus-base scmus-error status track
input_deps         = scmus-base editable ncurses
keys_deps          = scmus-base event ncurses
key-table_deps     = scmus-base ncurses
library-view_deps  = scmus-base ncurses track
option_deps        = scmus-base event ncurses
options-view_deps  = scmus-base editable event input ncurses scmus-error
queue-view_deps    = scmus-base event status track
scmus-base_deps    = config ncurses
scmus-client_deps  = scmus-base event mpd-client scmus-error status track
scmus-error_deps   = scmus-base command-line event
search-view_deps   = scmus-base editable input ncurses
status_deps        = scmus-base track
track_deps         = scmus-base
ui-curses_deps     = scmus-base command-line editable event input ncurses scmus-error status
ui-lib_deps        = scmus-base ncurses
view_deps          = scmus-base
window_deps        = scmus-base

$(foreach f,$(units) $(modules) main,$(eval $(f).@OBJEXT@: $(call objfiles,$($(f)_deps))))

include rules.mk

config.o: CSCFLAGS += -prelude $(prelude)

$(call objfiles,$(units) $(modules)): prologue.scm $(types-prereq-y)

$(target): $(call objfiles,$(units) $(modules)) main.@OBJEXT@
	$(call cmd,ld,$(LIBS))

$(call objfiles,$(test-units)): prologue.scm test/test.scm

check: $(call objfiles,$(units) $(modules) $(test-units)) check.@OBJEXT@
	$(call cmd,ld,$(LIBS))

all.types: $(types)
	$(call cmd,cat)

eggs:
	chicken-install $(eggs)

install: all
	$(INSTALL) -m755 $(bindir) scmus
	$(INSTALL) -m644 $(datadir)/scmus data/scmusrc.scm
	$(INSTALL) -m644 $(datadir)/scmus/colors $(wildcard data/colors/*)
	$(INSTALL) -m644 $(mandir)/man1 $(wildcard doc/*.1)
