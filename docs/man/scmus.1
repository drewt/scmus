.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "SCMUS" "1" "December 2018" "" "General Commands Manual"
.
.SH "NAME"
\fBscmus\fR \- Scheme MPD Client
.
.SH "SYNOPSIS"
\fBscmus\fR [options]
.
.SH "DESCRIPTION"
scmus is an ncurses based client for the Music Player Daemon, written and scriptable in the Scheme programming language\.
.
.SH "OPTIONS"
.
.TP
\fB\-a,\-\-address\fR \fIADDRESS\fR
Specify the address to use when connecting to the MPD server\.
.
.TP
\fB\-c,\-\-command\fR \fICOMMAND\fR
Send a command to the MPD server and print the response (as a Scheme object) to standard output\.
.
.TP
\fB\-\-config\fR \fIPATH\fR
Specify the path to a config file to use instead of the default\.
.
.TP
\fB\-h,\-\-help\fR
Print a help message and exit\.
.
.TP
\fB\-\-password\fR \fIPASSWORD\fR
Specify the password to use when connecting to the MPD server\.
.
.TP
\fB\-p,\-\-port\fR \fIPORT\fR
Specify the port to use when connecting to the MPD server\.
.
.TP
\fB\-u,\-\-unix\fR \fIPATH\fR
Specify the path to a UNIX domain socket to use when connecting to the MPD server\.
.
.TP
\fB\-v,\-\-version\fR
Print scmus\'s version and exit\.
.
.TP
\fB\-\-verbose\fR
Print some extra information to the console while scmus is running\.
.
.SH "VIEWS"
There are 8 views in scmus\. Press keys 1\-8 to change the active view\.
.
.TP
\fBLibrary View\fR (1)
In this view you can browse the entire music database\. The database is organized hierarchically, with artists at the top level, then albums, then tracks\. The arrow keys or \fBhjkl\fR are used to navigate through the hierarchy\.
.
.TP
\fBQueue view\fR (2)
Displays the tracks in the play queue\.
.
.TP
\fBSearch View\fR (3)
Used for searching MPD\'s music database\. This view is split vertically into two panes: the top pane has a list of search fields, and the bottom pane lists the results of the search\. To edit a search field, hit the \fBi\fR key with the cursor over the search field\.
.
.IP
Search fields should contain simple keywords, or a \fItag:value\fR pair (e\.g\. \fIartist:boris\fR)\. To perform the search, hit the \fBenter\fR key\. A list of results will appear in the bottom pane\.
.
.TP
\fBBrowser View\fR (4)
Like the library view, except that this view is organized as a file system rather than by artist/album/track\.
.
.TP
\fBStatus View\fR (5)
Displays the response to the last \fIstatus\fR MPD command\. This is used for debugging and is likely to be removed in the future\.
.
.TP
\fBError View\fR (6)
Displays a message describing the last error encountered by scmus\. This should be a network/mpd related error, or an exception triggered by your own code executed in \fBeval mode\fR\. If not, consider filing a bug report\.
.
.IP
This view will be replaced by a more featureful log viewer in the future\.
.
.TP
\fBOptions View\fR (7)
Used for viewing and editing scmus\'s options\. The edit an option, hit the \fBi\fR key with the cursor over the desired option\.
.
.TP
\fBBindings View\fR (8)
Used for viewing and editing key bindings\. Only keys that are already bound will appear here\. See the \fBbind\fR command for how to create new key bindings\.
.
.SH "COMMAND MODE AND EVAL MODE"
Everything in scmus ban be controlled by entering commands or Scheme expressions on the \fIcommand\-line\fR (the bottommost line)\. To enter \fBcommand mode\fR press \fB:\fR\. To enter \fBeval mode\fR press \fB$\fR\. After typing in your command/expression, press \fBENTER\fR to execute it or \fBESC\fR to cancel\.
.
.TP
Examples:
.
.IP
;; add the selected track to the play queue
.
.br
:add # command mode
.
.br
$(win\-add!) ; eval mode
.
.IP
;; start playing
.
.br
;; you could just press \'x\' which is the default binding for this function
.
.br
:play # command mode
.
.br
$(play!) ; eval mode
.
.IP
;; clear current window
.
.br
:win\-clear # command mode
.
.br
$(win\-clear!) ; eval mode
.
.SH "SEARCHING"
Search mode works like eval mode\. To enter search mode press \fB/\fR and then type the search query and press \fBENTER\fR\. Press \fBn\fR to find the next match using the same search query, or \fBN\fR to find the previous match\.
.
.P
scmus uses a simple substring match search\. When the current window contains a list of tracks, artist, album, albumartist and title are searched\.
.
.SH "STATUS LINE"
.
.TP
The right hand side of the status line (second row from the bottom) consists of the following fields:
.
.IP
single (\fBS\fR) repeat (\fBR\fR) random (\fBr\fR) consume (\fBC\fR)
.
.P
These can be toggled by pressing the \fBS\fR, \fBR\fR, \fBr\fR, and \fBC\fR keys respectively\.
.
.P
\fISingle\fR means that scmus will play a single song and then stop\.
.
.P
\fIRepeat\fR means that scmus will continue playing from the beginning of the play queue after it reaches the end\.
.
.P
\fIRandom\fR means that scmus will play tracks in a random order\.
.
.P
\fIConsume\fR means that tracks are removed from the play queue when they are finished playing\.
.
.SH "KEY BINDINNGS"
In scmus, a key or sequence of keys can be bound to a Scheme expression\. When that key or sequence of keys is pressed, the expression is evaluated\.
.
.P
See the \fBbind\fR and \fBunbind\fR commands in the \fICOMMANDS\fR section for a description of how keys can be bound or unbound\.
.
.P
To see a list of the current key bindings, open the \fBbindings view\fR by hitting the \fB8\fR key\.
.
.SH "COMMANDS"
This section describes scmus\'s commands\.
.
.P
Optional parameters are in [\fIsquare brackets\fR]\.
.
.TP
Scheme expressions can be embedded within a command using the \fB$\fR character\. The expression following the \fB$\fR character is evaluated and its result is spliced into the command, formatted as if by \fBDISPLAY\fR\. E\.g\.:
.
.IP
\fBecho\fR \fI$a\-scheme\-variable\fR
.
.TP
Scheme expressions may be optionally delimited by curly braces, e\.g\.:
.
.IP
\fBecho\fR \fI${a\-scheme\-variable}!\fR
.
.TP
You can assign to variables in the Scheme environment by using the \fIVAR\fR=\fIVALUE\fR syntax:
.
.IP
\fIVAR\fR=\fIVALUE\fR # assigns the string \fI"VALUE"\fR to the variable \fIVAR\fR
.
.br
\fBecho\fR \fI$VAR\fR # prints \fIVALUE\fR to the command line
.
.TP
\fBbind\fR [\fI\-f\fR] \fIcontext\fR \fIkeys\fR [\fIexpression\fR]
Add a key binding\.
.
.IP
\fI\-f\fR overwrite existing binding
.
.IP
There\'s one context for each view\. common is a special context on which bound keys in every view\. Keys bound in the common context can be overridden in other contexts\.
.
.IP
\fBValid key contexts\fR common library queue search browser status error options bindings
.
.TP
\fBclear\fR
Remove all tracks from the play queue\.
.
.TP
\fBcolorscheme\fR \fIname\fR
Change color scheme\. Color schemes are found in \fI/user/local/share/scmus/colors/\fR or \fI$XDG_CONFIG_HOME/scmus/colors/\fR\.
.
.TP
\fBconnect\fR [\fIhost\fR] [\fIport\fR [\fIpassword\fR]]]
Connect to an MPD server\.
.
.IP
If \fIhost\fR is given, it should be the hostname of the MPD server\.
.
.IP
If \fIport\fR is given, it should be the port number of the MPD server, or one of the strings \fIunix\fR or \fIdefault\fR\. If the \fIport\fR is given as \fIunix\fR, then \fIhost\fR is interpreted as the path to a UNIX domain socket\. If \fIport\fR is \fIdefault\fR, then the default configured port number is used\.
.
.IP
If \fIpass\fR is given, it should be the password for the MPD server\.
.
.TP
\fBecho\fR \fIarg\fR\.\.\.
Display arguments on the command line\.
.
.TP
\fBload\fR \fIplaylist\fR
Load the named playlist to the play queue\.
.
.TP
\fBnext\fR
Skip to the next track\.
.
.TP
\fBpause\fR
Toggle pause\.
.
.TP
\fBplay\fR
Play the current track from the beginning\.
.
.TP
\fBprev\fR
Skip to the previous track\.
.
.TP
\fBsave\fR \fIplaylist\-name\fR
Save the contents of the play queue as a playlist named \fIplaylist\-name\fR\.
.
.TP
\fBseek\fR [\fI+\-\fR](\fInum\fR[\fImh\fR] | [\fIHH\fR:]\fIMM\fR:\fISS\fR)
Seek to absolute or relative position within the current track\. Position can be given in seconds (default), minutes (\fIm\fR), hours (\fIh\fR) or \fIHH\fR:\fIMM\fR:\fISS\fR format (where \fIHH:\fR is optional\.
.
.IP
Seek 1 minute backward:
.
.br
:\fBseek\fR \fI\-1m\fR
.
.IP
Seek 5 seconds forward: :\fBseek\fR \fI+5\fR
.
.IP
Seek to absolute position 1h: :\fBseek\fR \fI1h\fR
.
.IP
Seek 90 seconds forward: :\fBseek\fR \fI+1:30\fR
.
.TP
\fBstop\fR
Stop playback\.
.
.TP
\fBunbind\fR [\fI\-f\fR] \fIcontext\fR \fIkeys\fR
Remove a key binding\.
.
.IP
\fI\-f\fR Don\'t throw an error if the binding is not known\.
.
.TP
\fBupdate\fR
Initiate an MPD database update\.
.
.TP
\fBvol\fR [\fI+\-\fR]\fINUM\fR
Set, increase or decrease volume\.
.
.IP
To increase or decrease the volume, use a \fI+\fR or \fI\-\fR prefix\. Otherwise the value is treated as an absolute volume level\.
.
.TP
\fBwin\-activate\fR
Activate the currently selected item\. The meaning of this command varies depending on what is selected\.
.
.IP
In the \fBlibrary\fR and \fBbrowser\fR views, it descends into the next level or the artist/album/track or directory hierarchy\. In the \fBqueue\fR view it plays the selected track\. In the \fBoptions\fR and \fBbindings\fR biews it begins editing the selected option/binding\. In \fBsearch\fR view it executes the search query\.
.
.TP
\fBwin\-add\fR
Add the currently marked or selected track(s) to the play queue\.
.
.TP
\fBwin\-bottom\fR
Move the cursor to the bottom of the active window\.
.
.TP
\fBwin\-clear\fR
In \fBqueue\fR view, clears the play queue\. In \fBsearch\fR view, clears the search results\.
.
.TP
\fBwin\-deactivate\fR
In the \fBlibrary\fR and \fBbrowser\fR views, ascend to the next level in the artist/album/track or directory hierarchy\.
.
.TP
\fBwin\-move\fR [\fI\-r\fR] [\fI\-\fR]\fIn\fR
Move the cursor up or down\.
.
.IP
\fI\-r\fR Interpret \fIn\fR as a percentage of the visible number of lines\.
.
.TP
\fBwin\-move\-tracks\fR [\fI\-b\fR]
Move the marked or selected track(s) to the cursor location\.
.
.IP
\fI\-b\fR Move the tracks "before" (under) the cursor\.
.
.TP
\fBwin\-remove\fR
Remove the selected entry\.
.
.TP
\fBwin\-search\fR \fIquery\fR
Search the active window\. This is the same as entering \fIquery\fR in search mode\.
.
.TP
\fBwin\-search\-next\fR
Move the cursor to the next search result\.
.
.TP
\fBwin\-search\-prev\fR
Move the cursor to the previous search result\.
.
.TP
\fBwin\-top\fR
Move the cursor to the top of the active window\.
.
.SH "SCHEME ENVIRONMENT"
See scmus(3) for documentation of the Scheme programming environment in scmus\.
.
.SH "CONFIGURATION OPTIONS"
This section describes scmus\'s options that can be altered with the \fBset\-option!\fR function\. Default values are in parentheses\.
.
.TP
\fBcolor\-cmdline\fR (\fI\'(default default default)\fR)
Command line colors\.
.
.TP
\fBcolor\-error\fR (\fI\'(default default red)\fR)
Colors for error messages displayed on the command line\.
.
.TP
\fBcolor\-info\fR (\fI\'(default default yellow)\fR)
Colors for informational messages displayed on the command line\.
.
.TP
\fBcolor\-statusline\fR (\fI\'(default white black)\fR)
Status line colors\.
.
.TP
\fBcolor\-titleline\fR (\fI\'(default blue white)\fR)
Title line colors\.
.
.TP
\fBcolor\-win\fR (\fI\'(default default default)\fR)
Window colors\.
.
.TP
\fBcolor\-win\-cur\fR (\fI\'(default default yellow)\fR)
Colors for the currently playing track\.
.
.TP
\fBcolor\-win\-cur\-sel\fR (\fI\'(default blue white)\fR)
Colors for the selected row which is also the currently playing track\.
.
.TP
\fBcolor\-win\-marked\fR (\fI\'(default blue white)\fR)
Colors for marked rows\.
.
.TP
\fBcolor\-win\-sel\fR (\fI\'(default blue white)\fR)
Colors for the selected row\.
.
.TP
\fBcolor\-win\-title\fR (\fI\'(default blue white)\fR)
Colors for window titles (topmost line of the screen)\.
.
.TP
\fBeval\-mode\-print\fR (\fI#f\fR)
In eval mode, print the result of evaluating the entered expression as if by \fBWRITE\fR\.
.
.TP
\fBformat\-browser\-dir\fR (\fI"~{directory}"\fR)
Format string for directories in the \fBbrowser\fR view\.
.
.TP
\fBformat\-browser\-file\fR (\fI"~{path}"\fR)
Format string for files in the \fBbrowser\fR view\.
.
.TP
\fBformat\-browser\-metadata\fR (\fI"~\-50%{tag} ~{value}"\fR)
Format string for file metadata in the \fBbrowser\fR view\.
.
.TP
\fBformat\-browser\-playlist\fR (\fI"[~{playlist}"\fR)
Format string for playlists in the \fBbrowser\fR view\.
.
.TP
\fBformat\-current\fR (\fI" ~a \- ~l ~n\. ~t~= ~y"\fR)
Format string for the line displaying the current track\.
.
.TP
\fBformat\-library\-album\fR (\fI"~{album}"\fR)
Format for albums in the \fBlibrary\fR view\.
.
.TP
\fBformat\-library\-artist\fR (\fI"~{artist}"\fR)
Format for artists in the \fBlibrary\fR view\.
.
.TP
\fBformat\-library\-file\fR (\fI"~\-25%a ~3n\. ~t~= ~\-4y ~d"\fR)
Format for files in the \fBlibrary\fR view\.
.
.TP
\fBformat\-library\-metadata\fR (\fI"~\-50%{tag} ~{value}"\fR)
Format for file metadata in the \fBlibrary\fR view\.
.
.TP
\fBformat\-library\-playlist\fR (\fI"~{playlist}"\fR)
Format for playlists in the \fBlibrary\fR view\.
.
.TP
\fBformat\-queue\fR (\fI"~\-25%a ~3n\. ~t~= ~\-4y ~d"\fR)
Format string for tracks in the \fBqueue\fR view\.
.
.TP
\fBformat\-search\-file\fR (\fI"~\-25%a ~3n\. ~t~= ~\-4y ~d"\fR)
Format string for files in the \fBsearch\fR view\.
.
.TP
\fBmpd\-address\fR (\fI"localhost"\fR)
Hostname of the MPD server\.
.
.TP
\fBmpd\-password\fR (\fI#f\fR)
Password to use for the MPD server\.
.
.TP
\fBmpd\-port\fR (\fI6600\fR)
Port number of the MPD server\.
.
.TP
\fBstatus\-update\-interval\fR (\fI1\.5\fR)
Number of seconds to wait between MPD status updates\. Consider increasing this if the latency to the MPD server is high\.
.
.SH "COLORS"
Colors are integers in the range \-1\.\.\.255\.
.
.P
The following color symbols are recognized:
.
.TP
Terminal\'s default color, \fI\-1\fR
default
.
.TP
\fI0\.\.7\fR
black, read, green, yellow, blue, magenta, cyan, white
.
.TP
\fI8\.\.15\fR
dark\-gray, light\-red, light\-green, light\-yellow, light\-blue, light\-magenta, light\-cyan, gray
.
.TP
Attributes may also be used, such as bold or underline\. The following attribute symbols are recognized
default normal underline reverse blink bold dim invis standout
.
.P
Color options are specified as 3\-tuples \fI(attribute background\-color foreground\-color)\fR\.
.
.SH "FORMAT STRINGS"
Format strings control the display of text throughout scmus\.
.
.TP
Special Keys:
.
.IP
~a ~{artist}
.
.br
~A ~{albumartist}
.
.br
~l ~{album}
.
.br
~D ~{discnumber}
.
.br
~n ~{tracknumber}
.
.br
~t ~{title}
.
.br
~g ~{genre}
.
.br
~c ~{comment}
.
.br
~y ~{date}
.
.br
~d ~{duration}
.
.br
~f ~{path}
.
.br
~F ~{filename}
.
.br
~P ~{playing}
.
.br
~p ~{current}
.
.br
~T ~{db\-playtime}
.
.br
~v ~{volume}
.
.br
~R ~{repeat}
.
.br
~r ~{random}
.
.br
~s ~{single}
.
.br
~C ~{consume}
.
.br
~{bitrate}
.
.br
~{host}
.
.br
~{port}
.
.TP
~^
start align center (use at most once)
.
.TP
~=
start align right (use at most once)
.
.TP
~~
literal tilde character

.
.P
If the string inside a \fI~{}\fR specifier is not one of the predefined values above, scmus will still try to find a metadata field with that name\. So ~{} can be used to display abritrary metadata, so long as the metadata is reporteed by MPD\.
.
.P
Colors may be specified in format strings with the \fI~<>\fR specifier\. Numbers between \-1 and 255 as well as color names (e\.g\. \fIgreen\fR) are supported\. \fI~<reset>\fR or \fI~<!>\fR can be used to reset the color to the default after using color specifiers\. To specify both foreground and background colors, separate them with a colon, e\.g\. \fI~<red:black>\fR\.
.
.P
Arbitrary Scheme code can be embedded in a format string inside of \fI~[]\fR\. The code will be evaluated and the result substituted for the \fI~[]\fR specifier, as if formatted by \fBDISPLAY\fR\. If the code evaluates to a function, the function is called with a track object and the formatted string\'s max width as arguments, and the return value is substituted\.
.
.P
Groups can be defined within format strings with the \fI~()\fR specifier\. The text inside the parentheses will be treated as a unit with respect to width, alignment and padding\. Groups should always be used in conjunction with a width specifier\.
.
.P
You can use printf style formatting (width, alignment, padding)\. As an extension, the width can have a \fI%\fR\-suffix, to specify a percentage of the available width\.
.
.TP
Examples:
.
.IP
(set\-option! \'format\-current "~a \- ~l ~n\. ~t~= ~y")
.
.br
(set\-option! \'format\-queue "~\-25%a ~3n\. ~t~= ~\-4y ~d")
.
.br
(set\-option! \'format\-queue "~{musicbrainz_trackid}")
.
.br
(set\-option! \'format\-queue "~<5>~\-25%a~<!> ~3n\. ~t~= ~\-4y ~d")
.
.br
(set\-option! \'format\-queue "~[(lambda (x) (track\-file x))]")
.
.br
(set\-option! \'format\-queue "~25%(Artist: ~a)")
.
.SH "FILES"
scmus reads its configuration from 2 files\.
.
.TP
\fI$XDG_CONFIG_HOME/scmus/rc\.scm\fR
Per\-user configuration\. (\fI$XDG_CONFIG_HOME\fR defaults to \fI$HOME/\.config\fR if it is not set\.)
.
.TP
\fI/usr/local/share/scmus/scmusrc\.scm\fR
System\-wide configuration\. This contains default settings, which can be overriden on a per\-user basis\.
.
.P
\fBColor Schemes\fR
.
.br
There are some color schemes in \fI/usr/local/share/scmus/colors/\fR\. You can switch them using the \fBcolorscheme!\fR function\.
.
.SH "BUGS"
You can submit bugs to the issue tracker on Github (https://github\.com/drewt/scmus/issues)\.
.
.SH "SEE ALSO"
\fBscmus\fR(3)
.
.SH "AUTHOR"
scmus was written by Drew Thoreson <\fIdrew\.thoreson@alumni\.ubc\.ca\fR>\.
.
.P
This man page is based heavily on the \fBcmus\fR man page, written by Frank Terbeck, Timo Hirvonen and Clay Barnes\.
